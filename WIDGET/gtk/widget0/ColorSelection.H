/* GANG Software
 * WIDGET/gtk/widget0/ColorSelection.H
 * Copyright (C) 2002 Nicholas Schmitt <nick@gang.umass.edu>
 * Wed Sep 18 16:39:46 2002
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */
// generated by gtk2c++

#ifndef gtk_widget0_ColorSelection_INCLUDED
#define gtk_widget0_ColorSelection_INCLUDED

#include "widget/ui/FloatSet.H"
#include "VBox.H"

namespace gtk {
namespace widget0 {

class ColorSelection
  :
    public widget::ui::FloatSet,
    public VBox
{
public:
  ColorSelection(
    float const value[3] ) :
      VBox( gtk_color_selection_new() )
    { set(value); }

  void set( float const a[3] )
    {
      double b[3];
      b[0] = a[0];
      b[1] = a[1];
      b[2] = a[2];
      gtk_color_selection_set_color(
        GTK_COLOR_SELECTION( w() ), b );
    }

  void get( float a[3] ) const
    {
      double b[3];
      gtk_color_selection_get_color(
        GTK_COLOR_SELECTION( w() ), b );
      a[0] = b[0];
      a[1] = b[1];
      a[2] = b[2];
    }

  virtual void set_sensitive( bool state = true )
    { Widget::set_sensitive(true); }
  virtual void set_sensitive( uint n, bool state )
    { WARN(); }

protected:
  ColorSelection( GtkWidget *x ) : VBox(x) {}
};

} // namespace widget0
} // namespace gtk

#endif // gtk_widget0_ColorSelection_INCLUDED
