/* GANG Software
 * WIDGET/gtk/widget0/ToolbarChild.H
 * Copyright (C) 2002 Nicholas Schmitt <nick@gang.umass.edu>
 * Wed Sep 18 16:39:46 2002
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */
// generated by gtk2c++

#ifndef gtk_widget0_ToolbarChild_INCLUDED
#define gtk_widget0_ToolbarChild_INCLUDED

#include "ToolbarChildType.H"

namespace gtk {
namespace widget0 {

class ToolbarChild : public ToolbarChildType
{
public:
  void append_space()
    { gtk_toolbar_append_space( GTK_TOOLBAR(w())); }
  void prepend_space()
    { gtk_toolbar_prepend_space( GTK_TOOLBAR(w())); }
  void insert_space( int position )
    { gtk_toolbar_insert_space( GTK_TOOLBAR(w()), position ); }
  void append_widget( GtkWidget *widget, const char *tooltip_text, const char *tooltip_private_text )
    { gtk_toolbar_append_widget( GTK_TOOLBAR(w()), widget, tooltip_text, tooltip_private_text ); }
  void prepend_widget( GtkWidget *widget, const char *tooltip_text, const char *tooltip_private_text )
    { gtk_toolbar_prepend_widget( GTK_TOOLBAR(w()), widget, tooltip_text, tooltip_private_text ); }
  void insert_widget( GtkWidget *widget, const char *tooltip_text, const char *tooltip_private_text, int position )
    { gtk_toolbar_insert_widget( GTK_TOOLBAR(w()), widget, tooltip_text, tooltip_private_text, position ); }
  void set_orientation( GtkOrientation orientation )
    { gtk_toolbar_set_orientation( GTK_TOOLBAR(w()), orientation ); }
  void set_style( GtkToolbarStyle style )
    { gtk_toolbar_set_style( GTK_TOOLBAR(w()), style ); }
  void set_space_size( int space_size )
    { gtk_toolbar_set_space_size( GTK_TOOLBAR(w()), space_size ); }
  void set_space_style( GtkToolbarSpaceStyle space_style )
    { gtk_toolbar_set_space_style( GTK_TOOLBAR(w()), space_style ); }
  void enable_tooltipss( int enable )
    { gtk_toolbar_enable_tooltipss( GTK_TOOLBAR(w()), enable ); }
  void set_button_relief( GtkReliefStyle relief )
    { gtk_toolbar_set_button_relief( GTK_TOOLBAR(w()), relief ); }
  GtkReliefStyle get_button_relief()
    { return gtk_toolbar_get_button_relief( GTK_TOOLBAR(w())); }

protected:
  ToolbarChild( GtkWidget *x ) : ToolbarChildType(x) {}
};

} // namespace widget0
} // namespace gtk

#endif // gtk_widget0_ToolbarChild_INCLUDED
