/* GANG Software
 * WIDGET/gtk/widget0/Curve.H
 * Copyright (C) 2002 Nicholas Schmitt <nick@gang.umass.edu>
 * Wed Sep 18 16:39:46 2002
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */
// generated by gtk2c++

#ifndef gtk_widget0_Curve_INCLUDED
#define gtk_widget0_Curve_INCLUDED

#include "DrawingArea.H"

namespace gtk {
namespace widget0 {

class Curve : public DrawingArea
{
public:
  Curve() :
      DrawingArea( gtk_curve_new() ) {}
  void reset()
    { gtk_curve_reset( GTK_CURVE(w())); }
  void set_gamma( float gamma )
    { gtk_curve_set_gamma( GTK_CURVE(w()), gamma ); }
  void set_range( float min_x, float max_x, float min_y, float max_y )
    { gtk_curve_set_range( GTK_CURVE(w()), min_x, max_x, min_y, max_y ); }
  void get_vector( int veclen, float vector[] )
    { gtk_curve_get_vector( GTK_CURVE(w()), veclen, vector ); }
  void set_vector( int veclen, float vector[] )
    { gtk_curve_set_vector( GTK_CURVE(w()), veclen, vector ); }
  void set_curve_type( GtkCurveType type )
    { gtk_curve_set_curve_type( GTK_CURVE(w()), type ); }

protected:
  Curve( GtkWidget *x ) : DrawingArea(x) {}
};

} // namespace widget0
} // namespace gtk

#endif // gtk_widget0_Curve_INCLUDED
