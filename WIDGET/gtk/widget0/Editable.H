/* GANG Software
 * WIDGET/gtk/widget0/Editable.H
 * Copyright (C) 2002 Nicholas Schmitt <nick@gang.umass.edu>
 * Wed Sep 18 16:39:46 2002
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */
// generated by gtk2c++

#ifndef gtk_widget0_Editable_INCLUDED
#define gtk_widget0_Editable_INCLUDED

#include "Widget.H"

namespace gtk {
namespace widget0 {

class Editable : public Widget
{
public:
  void select_region( int start, int end )
    { gtk_editable_select_region( GTK_EDITABLE(w()), start, end ); }
  void insert_text( char const *new_text, int new_text_length, int *position )
    { gtk_editable_insert_text( GTK_EDITABLE(w()), new_text, new_text_length, position ); }
  void delete_text( int start_pos, int end_pos )
    { gtk_editable_delete_text( GTK_EDITABLE(w()), start_pos, end_pos ); }
  char* get_chars( int start_pos, int end_pos )
    { return gtk_editable_get_chars( GTK_EDITABLE(w()), start_pos, end_pos ); }
  void cut_clipboard()
    { gtk_editable_cut_clipboard( GTK_EDITABLE(w())); }
  void copy_clipboard()
    { gtk_editable_copy_clipboard( GTK_EDITABLE(w())); }
  void paste_clipboard()
    { gtk_editable_paste_clipboard( GTK_EDITABLE(w())); }
#if 0
  void claim_selection( bool claim, guint32 time )
    { gtk_editable_claim_selection( GTK_EDITABLE(w()), claim, time ); }
#endif
  void delete_selection()
    { gtk_editable_delete_selection( GTK_EDITABLE(w())); }
#if 0
  void changed()
    { gtk_editable_changed( GTK_EDITABLE(w())); }
#endif
  void set_position( int position )
    { gtk_editable_set_position( GTK_EDITABLE(w()), position ); }
  int get_position()
    { return gtk_editable_get_position( GTK_EDITABLE(w())); }
  void set_editable( bool is_editable )
    { gtk_editable_set_editable( GTK_EDITABLE(w()), is_editable ); }

protected:
  Editable( GtkWidget *x ) : Widget(x) {}
};

} // namespace widget0
} // namespace gtk

#endif // gtk_widget0_Editable_INCLUDED
