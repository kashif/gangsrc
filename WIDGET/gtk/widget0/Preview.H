/* GANG Software
 * WIDGET/gtk/widget0/Preview.H
 * Copyright (C) 2002 Nicholas Schmitt <nick@gang.umass.edu>
 * Wed Sep 18 16:39:46 2002
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */
// generated by gtk2c++

#ifndef gtk_widget0_Preview_INCLUDED
#define gtk_widget0_Preview_INCLUDED

#include "Widget.H"

namespace gtk {
namespace widget0 {

class Preview : public Widget
{
public:
#if 0
  void uninit()
    { gtk_preview_uninit( GTK_PREVIEW(w())); }
#endif
  Preview( GtkPreviewType type ) :
      Widget( gtk_preview_new( type ) ) {}
  void size( int width, int height )
    { gtk_preview_size( GTK_PREVIEW(w()), width, height ); }
  void put( GdkWindow *window, GdkGC *gc, int srcx, int srcy, int destx, int desty, int width, int height )
    { gtk_preview_put( GTK_PREVIEW(w()), window, gc, srcx, srcy, destx, desty, width, height ); }
#if 0
  void draw_row( guchar *data, int x, int y, int w )
    { gtk_preview_draw_row( GTK_PREVIEW(w()), data, x, y, w ); }
#endif
  void set_expand( bool expand )
    { gtk_preview_set_expand( GTK_PREVIEW(w()), expand ); }
#if 0
  void set_gamma()
    { gtk_preview_set_gamma( GTK_PREVIEW(w())); }
  void set_color_cube( uint ngreen_shades, uint nblue_shades, uint ngray_shades )
    { gtk_preview_set_color_cube( GTK_PREVIEW(w()), ngreen_shades, nblue_shades, ngray_shades ); }
  void set_install_cmap()
    { gtk_preview_set_install_cmap( GTK_PREVIEW(w())); }
  void set_reserved()
    { gtk_preview_set_reserved( GTK_PREVIEW(w())); }
  void set_dither( GdkRgbDither dither )
    { gtk_preview_set_dither( GTK_PREVIEW(w()), dither ); }
  GdkVisual* get_visual()
    { return gtk_preview_get_visual( GTK_PREVIEW(w())); }
  GdkColormap* get_cmap()
    { return gtk_preview_get_cmap( GTK_PREVIEW(w())); }
  GtkPreviewInfo* get_info()
    { return gtk_preview_get_info( GTK_PREVIEW(w())); }
  void reset()
    { gtk_preview_reset( GTK_PREVIEW(w())); }
#endif

protected:
  Preview( GtkWidget *x ) : Widget(x) {}
};

} // namespace widget0
} // namespace gtk

#endif // gtk_widget0_Preview_INCLUDED
