/* GANG Software
 * WIDGET/gtk/widget0/Progress.H
 * Copyright (C) 2002 Nicholas Schmitt <nick@gang.umass.edu>
 * Wed Sep 18 16:39:46 2002
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */
// generated by gtk2c++

#ifndef gtk_widget0_Progress_INCLUDED
#define gtk_widget0_Progress_INCLUDED

#include "Widget.H"

namespace gtk {
namespace widget0 {

class Progress : public Widget
{
public:
  void set_show_text( int show_text )
    { gtk_progress_set_show_text( GTK_PROGRESS(w()), show_text ); }
  void set_text_alignment( float x_align, float y_align )
    { gtk_progress_set_text_alignment( GTK_PROGRESS(w()), x_align, y_align ); }
  void set_format_string( char const *format )
    { gtk_progress_set_format_string( GTK_PROGRESS(w()), format ); }
  void set_adjustment( GtkAdjustment *adjustment )
    { gtk_progress_set_adjustment( GTK_PROGRESS(w()), adjustment ); }
  void configure( float value, float min, float max )
    { gtk_progress_configure( GTK_PROGRESS(w()), value, min, max ); }
  void set_percentage( float percentage )
    { gtk_progress_set_percentage( GTK_PROGRESS(w()), percentage ); }
  void set_value( float value )
    { gtk_progress_set_value( GTK_PROGRESS(w()), value ); }
  float get_value()
    { return gtk_progress_get_value( GTK_PROGRESS(w())); }
  void set_activity_mode( uint activity_mode )
    { gtk_progress_set_activity_mode( GTK_PROGRESS(w()), activity_mode ); }
  char* get_current_text()
    { return gtk_progress_get_current_text( GTK_PROGRESS(w())); }
  char* get_text_from_value( float value )
    { return gtk_progress_get_text_from_value( GTK_PROGRESS(w()), value ); }
  float get_current_percentage()
    { return gtk_progress_get_current_percentage( GTK_PROGRESS(w())); }
  float get_percentage_from_value( float value )
    { return gtk_progress_get_percentage_from_value( GTK_PROGRESS(w()), value ); }

protected:
  Progress( GtkWidget *x ) : Widget(x) {}
};

} // namespace widget0
} // namespace gtk

#endif // gtk_widget0_Progress_INCLUDED
