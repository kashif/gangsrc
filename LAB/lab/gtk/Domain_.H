/* GANG Software
 * LAB/lab/gtk/Domain_.H
 * Copyright (C) 2002 Nicholas Schmitt <nick@gang.umass.edu>
 * Wed Sep 18 16:39:46 2002
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */
// Generated by glade++

#ifndef lab_gtk_Domain__INCLUDED
#define lab_gtk_Domain__INCLUDED

#include "gtk/widget0/Tooltips.H"
#include "gtk/widget0/Entry.H"
#include "gtk/widget0/Frame.H"
#include "gtk/widget0/HBox.H"
#include "gtk/widget0/Label.H"
#include "gtk/widget1/MenuButton.H"
#include "gtk/widget1/NumberWidgetFloat.H"
#include "gtk/widget1/PopNotebook.H"
#include "gtk/widget0/ScrolledWindow.H"
#include "gtk/widget0/SpinButton.H"
#include "gtk/widget0/Table.H"
#include "gtk/widget0/Text.H"
#include "gtk/widget0/VBox.H"

namespace lab {
namespace gtk {


class Domain_
{

public:

  Domain_();
  virtual ~Domain_();

  void enable_tooltips( bool state )
    { _tooltips->enable(state); }

protected:

  ::gtk::widget0::Widget *main_widget() { return _domain_choice_w; }

  // widgets
  ::gtk::widget1::PopNotebook *_domain_choice_w;
  ::gtk::widget0::Table *_table2_w;
  ::gtk::widget0::Entry *_rect_base_w;
  ::gtk::widget0::Entry *_rect_a0_w;
  ::gtk::widget0::Entry *_rect_count0_w;
  ::gtk::widget0::Entry *_rect_a1_w;
  ::gtk::widget0::Entry *_rect_count1_w;
  ::gtk::widget0::Label *_label6_w;
  ::gtk::widget0::Label *_label8_w;
  ::gtk::widget0::Label *_label9_w;
  ::gtk::widget0::Label *_label10_w;
  ::gtk::widget0::Label *_label11_w;
  ::gtk::widget0::Label *_label12_w;
  ::gtk::widget0::Table *_table3_w;
  ::gtk::widget0::Entry *_polar_center_w;
  ::gtk::widget0::Entry *_polar_radius0_w;
  ::gtk::widget0::Entry *_polar_radius1_w;
  ::gtk::widget0::Entry *_polar_n_radius_w;
  ::gtk::widget0::Entry *_polar_angle0_w;
  ::gtk::widget0::Entry *_polar_angle1_w;
  ::gtk::widget0::Entry *_polar_n_angle_w;
  ::gtk::widget0::Label *_label14_w;
  ::gtk::widget0::Label *_label15_w;
  ::gtk::widget0::Label *_label16_w;
  ::gtk::widget0::Label *_label17_w;
  ::gtk::widget0::Label *_label18_w;
  ::gtk::widget0::Label *_label19_w;
  ::gtk::widget0::Label *_label20_w;
  ::gtk::widget0::Table *_table5_w;
  ::gtk::widget0::Label *_label21_w;
  ::gtk::widget1::MenuButton *_polar_mode_w;
  ::gtk::widget0::Label *_label22_w;
  ::gtk::widget0::VBox *_vbox1_w;
  ::gtk::widget0::Frame *_frame1_w;
  ::gtk::widget0::ScrolledWindow *_scrolledwindow1_w;
  ::gtk::widget0::Text *_boundary_list_w;
  ::gtk::widget0::VBox *_vbox2_w;
  ::gtk::widget0::HBox *_hbox1_w;
  ::gtk::widget0::Frame *_frame4_w;
  ::gtk::widget0::SpinButton *_refine_w;
  ::gtk::widget0::Frame *_placeholder_w;
  ::gtk::widget0::HBox *_hbox2_w;
  ::gtk::widget1::NumberWidgetFloat *_min_angle_w;
  ::gtk::widget1::NumberWidgetFloat *_max_area_w;
  ::gtk::widget0::HBox *_hbox3_w;
  ::gtk::widget1::NumberWidgetFloat *_max_area2_w;
  ::gtk::widget1::NumberWidgetFloat *_smooth_w;
  ::gtk::widget0::HBox *_hbox4_w;
  ::gtk::widget1::NumberWidgetFloat *_curvature_exp_w;
  ::gtk::widget1::NumberWidgetFloat *_curvature_cut_w;
  ::gtk::widget0::Label *_label5_w;
  ::gtk::widget0::VBox *_vbox3_w;
  ::gtk::widget0::Frame *_frame5_w;
  ::gtk::widget0::ScrolledWindow *_scrolledwindow2_w;
  ::gtk::widget0::Text *_curve_list_w;
  ::gtk::widget0::Label *_label26_w;
  ::gtk::widget0::Table *_table4_w;
  ::gtk::widget0::Entry *_domainfile_w;
  ::gtk::widget0::Label *_label24_w;
  ::gtk::widget0::Label *_label25_w;

  // callbacks


private:

  void set_tooltip( ::gtk::widget0::Widget *w, char const *text )
    { _tooltips->set_tip( w, text, 0 ); }

  ::gtk::widget0::Tooltips *_tooltips;

  // disabled copy constructor
  Domain_( Domain_ const & );
  // disabled assignment operator
  Domain_ &operator=( Domain_ const & );

};

} // namespace gtk
} // namespace lab


#endif // lab_gtk_Domain__INCLUDED
