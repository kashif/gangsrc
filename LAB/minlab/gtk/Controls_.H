/* GANG Software
 * LAB/minlab/gtk/Controls_.H
 * Copyright (C) 2002 Nicholas Schmitt <nick@gang.umass.edu>
 * Wed Sep 18 16:39:46 2002
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */
// Generated by glade++

#ifndef minlab_gtk_Controls__INCLUDED
#define minlab_gtk_Controls__INCLUDED

#include "gtk/widget0/Tooltips.H"
#include "gtk/widget0/ButtonCb.H"
#include "gtk/widget0/Entry.H"
#include "gtk/widget0/Frame.H"
#include "gtk/widget0/Label.H"
#include "gtk/widget1/NumberWidgetFloat.H"
#include "gtk/widget1/NumberWidgetFloatCb.H"
#include "gtk/widget1/PopNotebook.H"
#include "gtk/widget0/Table.H"
#include "gtk/widget0/VBox.H"

namespace minlab {
namespace gtk {


class Controls_
{

public:

  Controls_();
  virtual ~Controls_();

  void enable_tooltips( bool state )
    { _tooltips->enable(state); }

protected:

  ::gtk::widget0::Widget *main_widget() { return _main_widget_w; }

  // widgets
  ::gtk::widget1::PopNotebook *_main_widget_w;
  ::gtk::widget0::Frame *_page100_w;
  ::gtk::widget1::PopNotebook *_notebook_surf_data_w;
  ::gtk::widget0::VBox *_vbox23_w;
  ::gtk::widget0::Frame *_frame1_w;
  ::gtk::widget0::Table *_table1_w;
  ::gtk::widget0::Label *_label2_w;
  ::gtk::widget0::Entry *_zstart_spinor_w;
  ::gtk::widget0::Frame *_frame7_w;
  ::gtk::widget0::Table *_table101_w;
  ::gtk::widget0::Label *_label1038_w;
  ::gtk::widget0::Label *_label1039_w;
  ::gtk::widget0::Entry *_spinor1_w;
  ::gtk::widget0::Entry *_spinor2_w;
  ::gtk::widget0::Frame *_frame8_w;
  ::gtk::widget0::Table *_table102_w;
  ::gtk::widget0::Label *_label1040_w;
  ::gtk::widget0::Label *_label1041_w;
  ::gtk::widget0::Entry *_spinor0_init_w;
  ::gtk::widget0::Entry *_spinor1_init_w;
  ::gtk::widget0::Label *_label1052_w;
  ::gtk::widget0::Entry *_spinor2_init_w;
  ::gtk::widget0::Label *_label1042_w;
  ::gtk::widget0::VBox *_vbox24_w;
  ::gtk::widget0::Frame *_frame2_w;
  ::gtk::widget0::Table *_table2_w;
  ::gtk::widget0::Label *_label3_w;
  ::gtk::widget0::Entry *_zstart_weierstrass_w;
  ::gtk::widget0::Frame *_frame9_w;
  ::gtk::widget0::Table *_table103_w;
  ::gtk::widget0::Label *_label1043_w;
  ::gtk::widget0::Label *_label1044_w;
  ::gtk::widget0::Entry *_weierstrass1_w;
  ::gtk::widget0::Entry *_weierstrass2_w;
  ::gtk::widget0::Frame *_frame10_w;
  ::gtk::widget0::Table *_table104_w;
  ::gtk::widget0::Label *_label1045_w;
  ::gtk::widget0::Label *_label1046_w;
  ::gtk::widget0::Entry *_weierstrass0_init_w;
  ::gtk::widget0::Entry *_weierstrass1_init_w;
  ::gtk::widget0::Label *_label1053_w;
  ::gtk::widget0::Entry *_weierstrass2_init_w;
  ::gtk::widget0::Label *_label1047_w;
  ::gtk::widget0::Label *_label100_w;
  ::gtk::widget0::Frame *_page101_w;
  ::gtk::widget0::VBox *_vbox27_w;
  ::gtk::widget0::ButtonCb<Controls_> *_parameter_reset_w;
  ::gtk::widget0::Frame *_frame12_w;
  ::gtk::widget0::Table *_table110_w;
  ::gtk::widget1::NumberWidgetFloatCb<Controls_> *_associate_slider_w;
  ::gtk::widget0::ButtonCb<Controls_> *_associate_button0_w;
  ::gtk::widget0::ButtonCb<Controls_> *_associate_button1_w;
  ::gtk::widget0::ButtonCb<Controls_> *_associate_button2_w;
  ::gtk::widget0::ButtonCb<Controls_> *_associate_button3_w;
  ::gtk::widget0::Label *_label101_w;
  ::gtk::widget0::Frame *_page102_w;
  ::gtk::widget0::Table *_table109_w;
  ::gtk::widget1::NumberWidgetFloat *_integrator_count_w;
  ::gtk::widget1::NumberWidgetFloat *_initial_integrator_count_w;
  ::gtk::widget0::Label *_label102_w;

  // callbacks
  virtual void parameter_reset_cb() = 0;
  virtual void associate_slider_cb() = 0;
  virtual void associate_button0_cb() = 0;
  virtual void associate_button1_cb() = 0;
  virtual void associate_button2_cb() = 0;
  virtual void associate_button3_cb() = 0;

private:

  void set_tooltip( ::gtk::widget0::Widget *w, char const *text )
    { _tooltips->set_tip( w, text, 0 ); }

  ::gtk::widget0::Tooltips *_tooltips;

  // disabled copy constructor
  Controls_( Controls_ const & );
  // disabled assignment operator
  Controls_ &operator=( Controls_ const & );

};

} // namespace gtk
} // namespace minlab


#endif // minlab_gtk_Controls__INCLUDED
