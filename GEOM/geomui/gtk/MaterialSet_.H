/* GANG Software
 * GEOM/geomui/gtk/MaterialSet_.H
 * Copyright (C) 2002 Nicholas Schmitt <nick@gang.umass.edu>
 * Wed Sep 18 16:39:46 2002
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */
// Generated by glade++

#ifndef geomui_gtk_MaterialSet__INCLUDED
#define geomui_gtk_MaterialSet__INCLUDED

#include "gtk/widget0/Tooltips.H"
#include "gtk/widget1/ButtonBarCb.H"
#include "gtk/widget0/ButtonCb.H"
#include "gtk/widget1/ColorCb.H"
#include "gtk/widget0/Frame.H"
#include "gtk/widget0/HBox.H"
#include "gtk/widget0/Label.H"
#include "gtk/widget1/MenuButtonCb.H"
#include "gtk/widget1/NumberWidget2FloatCb.H"
#include "gtk/widget1/NumberWidgetFloatCb.H"
#include "gtk/widget1/PopNotebook.H"
#include "gtk/widget0/Table.H"
#include "gtk/widget0/ToggleButtonCb.H"
#include "gtk/widget0/VBox.H"

namespace geomui {
namespace gtk {


class MaterialSet_
{

public:

  MaterialSet_();
  virtual ~MaterialSet_();

  void enable_tooltips( bool state )
    { _tooltips->enable(state); }

protected:

  ::gtk::widget0::Widget *main_widget() { return _vbox38_w; }

  // widgets
  ::gtk::widget0::VBox *_vbox38_w;
  ::gtk::widget0::Frame *_frame15_w;
  ::gtk::widget1::ButtonBarCb<MaterialSet_> *_id_w;
  ::gtk::widget0::Table *_table3_w;
  ::gtk::widget0::ButtonCb<MaterialSet_> *_reset_w;
  ::gtk::widget0::ToggleButtonCb<MaterialSet_> *_enable_w;
  ::gtk::widget0::ToggleButtonCb<MaterialSet_> *_shademodel_w;
  ::gtk::widget0::ToggleButtonCb<MaterialSet_> *_transparent_w;
  ::gtk::widget1::PopNotebook *_notebook1_w;
  ::gtk::widget0::VBox *_vbox41_w;
  ::gtk::widget0::HBox *_hbox22_w;
  ::gtk::widget0::ToggleButtonCb<MaterialSet_> *_custom_color_w;
  ::gtk::widget0::ToggleButtonCb<MaterialSet_> *_lit_w;
  ::gtk::widget1::ColorCb<MaterialSet_> *_color_w;
  ::gtk::widget0::VBox *_hidebox_w;
  ::gtk::widget0::Frame *_frame13_w;
  ::gtk::widget1::MenuButtonCb<MaterialSet_> *_model_w;
  ::gtk::widget0::HBox *_hbox27_w;
  ::gtk::widget1::ColorCb<MaterialSet_> *_ambient_w;
  ::gtk::widget1::ColorCb<MaterialSet_> *_diffuse_w;
  ::gtk::widget0::HBox *_hbox28_w;
  ::gtk::widget1::ColorCb<MaterialSet_> *_specular_w;
  ::gtk::widget1::ColorCb<MaterialSet_> *_emissive_w;
  ::gtk::widget0::HBox *_hbox29_w;
  ::gtk::widget0::Frame *_frame16_w;
  ::gtk::widget1::NumberWidgetFloatCb<MaterialSet_> *_shininess_w;
  ::gtk::widget0::Label *_label1_w;
  ::gtk::widget0::VBox *_vbox40_w;
  ::gtk::widget0::HBox *_hbox25_w;
  ::gtk::widget1::NumberWidgetFloatCb<MaterialSet_> *_element_size_w;
  ::gtk::widget1::NumberWidget2FloatCb<MaterialSet_> *_gap_w;
  ::gtk::widget0::HBox *_hbox26_w;
  ::gtk::widget0::Frame *_frame11_w;
  ::gtk::widget0::VBox *_vbox8_w;
  ::gtk::widget1::MenuButtonCb<MaterialSet_> *_side0_w;
  ::gtk::widget1::MenuButtonCb<MaterialSet_> *_side1_w;
  ::gtk::widget1::NumberWidget2FloatCb<MaterialSet_> *_nudge_w;
  ::gtk::widget0::Label *_label2_w;

  // callbacks
  virtual void id_cb() = 0;
  virtual void reset_cb() = 0;
  virtual void enable_cb() = 0;
  virtual void shademodel_cb() = 0;
  virtual void transparent_cb() = 0;
  virtual void custom_color_cb() = 0;
  virtual void lit_cb() = 0;
  virtual void color_cb() = 0;
  virtual void model_cb() = 0;
  virtual void ambient_cb() = 0;
  virtual void diffuse_cb() = 0;
  virtual void specular_cb() = 0;
  virtual void emissive_cb() = 0;
  virtual void shininess_cb() = 0;
  virtual void element_size_cb() = 0;
  virtual void gap_cb() = 0;
  virtual void side_cb() = 0;
  virtual void nudge_cb() = 0;

private:

  void set_tooltip( ::gtk::widget0::Widget *w, char const *text )
    { _tooltips->set_tip( w, text, 0 ); }

  ::gtk::widget0::Tooltips *_tooltips;

  // disabled copy constructor
  MaterialSet_( MaterialSet_ const & );
  // disabled assignment operator
  MaterialSet_ &operator=( MaterialSet_ const & );

};

} // namespace gtk
} // namespace geomui


#endif // geomui_gtk_MaterialSet__INCLUDED
