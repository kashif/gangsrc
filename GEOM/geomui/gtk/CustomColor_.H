/* GANG Software
 * GEOM/geomui/gtk/CustomColor_.H
 * Copyright (C) 2002 Nicholas Schmitt <nick@gang.umass.edu>
 * Wed Sep 18 16:39:46 2002
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */
// Generated by glade++

#ifndef geomui_gtk_CustomColor__INCLUDED
#define geomui_gtk_CustomColor__INCLUDED

#include "gtk/widget0/Tooltips.H"
#include "gtk/widget0/ButtonCb.H"
#include "gtk/widget1/ColorCb.H"
#include "gtk/widget0/Frame.H"
#include "gtk/widget0/Label.H"
#include "gtk/widget1/NumberWidget2FloatCb.H"
#include "gtk/widget1/NumberWidgetFloatCb.H"
#include "gtk/widget1/PopNotebookCb.H"
#include "gtk/widget0/Table.H"
#include "gtk/widget0/VBox.H"

namespace geomui {
namespace gtk {


class CustomColor_
{

public:

  CustomColor_();
  virtual ~CustomColor_();

  void enable_tooltips( bool state )
    { _tooltips->enable(state); }

protected:

  ::gtk::widget0::Widget *main_widget() { return _main_widget_w; }

  // widgets
  ::gtk::widget0::VBox *_main_widget_w;
  ::gtk::widget1::PopNotebookCb<CustomColor_> *_color_choice_w;
  ::gtk::widget0::Table *_table1_w;
  ::gtk::widget1::ColorCb<CustomColor_> *_color0_w;
  ::gtk::widget0::ButtonCb<CustomColor_> *_color_reset0_w;
  ::gtk::widget0::Label *_tab0_w;
  ::gtk::widget0::Table *_table3_w;
  ::gtk::widget1::ColorCb<CustomColor_> *_color1_w;
  ::gtk::widget0::ButtonCb<CustomColor_> *_color_reset1_w;
  ::gtk::widget0::Label *_tab1_w;
  ::gtk::widget0::Table *_table61_w;
  ::gtk::widget0::ButtonCb<CustomColor_> *_color_reset2_w;
  ::gtk::widget0::Table *_table68_w;
  ::gtk::widget1::ColorCb<CustomColor_> *_color2_w;
  ::gtk::widget0::Frame *_frame1_w;
  ::gtk::widget1::NumberWidgetFloatCb<CustomColor_> *_scale2_w;
  ::gtk::widget0::Label *_tab2_w;
  ::gtk::widget0::Table *_table67_w;
  ::gtk::widget0::ButtonCb<CustomColor_> *_color_reset3_w;
  ::gtk::widget0::Table *_table69_w;
  ::gtk::widget1::ColorCb<CustomColor_> *_color3_w;
  ::gtk::widget0::Frame *_frame4_w;
  ::gtk::widget1::NumberWidgetFloatCb<CustomColor_> *_scale3_w;
  ::gtk::widget0::Label *_tab3_w;
  ::gtk::widget0::Table *_table66_w;
  ::gtk::widget0::ButtonCb<CustomColor_> *_color_reset4_w;
  ::gtk::widget0::Table *_table70_w;
  ::gtk::widget1::ColorCb<CustomColor_> *_color4_w;
  ::gtk::widget0::Frame *_frame5_w;
  ::gtk::widget1::NumberWidgetFloatCb<CustomColor_> *_scale4_w;
  ::gtk::widget0::Label *_tab4_w;
  ::gtk::widget0::Table *_table65_w;
  ::gtk::widget1::ColorCb<CustomColor_> *_color5_w;
  ::gtk::widget0::ButtonCb<CustomColor_> *_color_reset5_w;
  ::gtk::widget0::Label *_tab5_w;
  ::gtk::widget0::Table *_table64_w;
  ::gtk::widget0::ButtonCb<CustomColor_> *_color_reset6_w;
  ::gtk::widget0::Table *_table71_w;
  ::gtk::widget1::ColorCb<CustomColor_> *_color6_w;
  ::gtk::widget0::Frame *_frame6_w;
  ::gtk::widget1::NumberWidgetFloatCb<CustomColor_> *_scale6_w;
  ::gtk::widget0::Label *_tab6_w;
  ::gtk::widget0::Table *_table63_w;
  ::gtk::widget1::ColorCb<CustomColor_> *_color7_w;
  ::gtk::widget0::ButtonCb<CustomColor_> *_color_reset7_w;
  ::gtk::widget0::Label *_tab7_w;
  ::gtk::widget0::Table *_table62_w;
  ::gtk::widget1::ColorCb<CustomColor_> *_color8a_w;
  ::gtk::widget1::ColorCb<CustomColor_> *_color8b_w;
  ::gtk::widget0::ButtonCb<CustomColor_> *_color_reset8_w;
  ::gtk::widget0::Label *_tab8_w;
  ::gtk::widget0::Table *_table4_w;
  ::gtk::widget0::ButtonCb<CustomColor_> *_color_reset9_w;
  ::gtk::widget1::NumberWidget2FloatCb<CustomColor_> *_color9_w;
  ::gtk::widget0::Label *_tab9_w;

  // callbacks
  virtual void color_choice_cb() = 0;
  virtual void color0_cb() = 0;
  virtual void color_reset0_cb() = 0;
  virtual void color1_cb() = 0;
  virtual void color_reset1_cb() = 0;
  virtual void color_reset2_cb() = 0;
  virtual void color2_cb() = 0;
  virtual void color_reset3_cb() = 0;
  virtual void color3_cb() = 0;
  virtual void color_reset4_cb() = 0;
  virtual void color4_cb() = 0;
  virtual void color5_cb() = 0;
  virtual void color_reset5_cb() = 0;
  virtual void color_reset6_cb() = 0;
  virtual void color6_cb() = 0;
  virtual void color7_cb() = 0;
  virtual void color_reset7_cb() = 0;
  virtual void color8_cb() = 0;
  virtual void color_reset8_cb() = 0;
  virtual void color_reset9_cb() = 0;
  virtual void color9_cb() = 0;

private:

  void set_tooltip( ::gtk::widget0::Widget *w, char const *text )
    { _tooltips->set_tip( w, text, 0 ); }

  ::gtk::widget0::Tooltips *_tooltips;

  // disabled copy constructor
  CustomColor_( CustomColor_ const & );
  // disabled assignment operator
  CustomColor_ &operator=( CustomColor_ const & );

};

} // namespace gtk
} // namespace geomui


#endif // geomui_gtk_CustomColor__INCLUDED
